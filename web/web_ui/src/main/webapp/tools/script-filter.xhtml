<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:ts="http://java.sun.com/jsf/composite/tag"
  xmlns:p="http://primefaces.org/ui"
  template="/WEB-INF/templates/tank-terse.xhtml">
  <ui:define name="content">
    <style>
.code {
  background-color: #EFEFEF;
  border: 1px dashed gray;
  color: black;
  font-size: 13px;
  padding: 5px;
  width: 90%;
  margin: 50 20;
}
</style>
    <h:form id="mainForm">
      <ts:toolbar title="Script Filter Applet" />
      <h2>**NOTE: If this window is closed, the Script Filter
        Applet will close as well.</h2>
      <div style="margin: 20px 0;">
        If you are getting Security warnings or errors, click here to
        install certificate.
        <p:commandLink oncomplete="PF('securityPopup').show()"
          update=":securityPopupForm" value="Security Instructions"
          ajax="true" />
      </div>

      <div class="vertical-spacer" />
      <p:growl globalOnly="true" id="messages" />

      <div style="margin: 10px;">
        <div class="clearfix">
          <div class="float-right">
            <div>The Intuit Tank Script Filter Tool is a tool that
              allows you to manipulate a Intuit Tank script using a
              scripting language and the internal Object representations
              from Intuit Tank.</div>
            <div style="margin: 20px 0;">
              To view Javadoc for Script objects see <a
                href="#{request.contextPath}/apidocs/index.html"
                target="_blank">javadocs</a>. The main classes of
              interest are ScriptTO, the top level Script object, The
              ScriptStepTO, contained in ScriptTO in the steps
              Collection, and the StepDataTO, the Objects used for query
              strings, requests, responses, etc.
            </div>

            <div style="margin: 20px 0;">
              Scripting guide for Rhino (Javascript) <a
                href="http://www.mozilla.org/rhino/ScriptingJava.html"
                target="_blank">http://www.mozilla.org/rhino/ScriptingJava.html</a>.
            </div>
          </div>
          <div class="float-right">

            <applet code="com.intuit.tank.tools.script.AppletLauncher"
              codebase="." archive="Tank-Script-Runner-all.jar"
              alt="You need Java enabled to run this applet."
              width="150" height="150">
              <PARAM NAME="backgroundColor" VALUE="#EFEFEF" />
              <PARAM NAME="rootContext" VALUE="#{request.contextPath}" />
            </applet>
          </div>
        </div>

        <div>
          <h3>Script samples</h3>
          <div class="code">
            <h3>Script to loop through all steps and set a name if
              empty</h3>
            <pre>
//get the script from the ioBean
var script = ioBean.getInput("script");

//convert the list of scripts to a javascript array
var steps = script.getSteps().toArray();

//loop through each element in the array
for (var i = 0; i &lt; steps.length; i++) {
    var step = steps[i];
    //print the name to output console
    ioBean.println(step.getName());
    //if name is empty, give it a numeric name based on the index
    if (step.getName == null || step.getName() == "") {
        step.setName("Script step " + i);
    }
}
</pre>
          </div>

          <div class="code" style="margin: 20px 0;">
            <h3>Script add request for google search to beginning
              and end of steps</h3>
            <pre>
//use full java package names e.g. com.intuit.tank.api.model.v1.script.ScriptStepTO
importPackage(com.intuit.tank.api.model.v1.script);

//get the script from the ioBean
var script = ioBean.getInput("script");

//add a step to the end
var newStep = new com.intuit.tank.api.model.v1.script.ScriptStepTO();
//set values
newStep.setComments("comments");
newStep.setName("Inserted Step");
newStep.setSimplePath("/search");
newStep.setHostname("www.google.com");
newStep.setMethod("GET");
newStep.setProtocol("http");
newStep.setOnFail("abort");
newStep.setDuration("00:01:30");//one minute 30 seconds
newStep.setMimetype("text/html");
newStep.setType("request");
newStep.setScriptGroupName("My Script Group");

//add a query string
var data = new StepDataTO();
data.setKey("q");
data.setValue("turtles");
data.setType("queryString");

//add to queryString set
newStep.getQueryStrings().add(data);

//add a request header
data = new StepDataTO();
data.setKey("Connection");
data.setValue("Keep-Alive");
data.setType("requestHeader");

//add to requestHeaders set
newStep.getRequestheaders().add(data);

//add this step to the end of the script steps if not already added
if (!script.getSteps().get(script.getSteps().size() - 1).getName().equals("Inserted Step")) {
    script.getSteps().add(newStep);
}
//now add it to the beginning if not already there
if (!script.getSteps().get(0).getName().equals("Inserted Step")) {
    script.getSteps().add(0, newStep);
}
</pre>
          </div>
        </div>

      </div>
    </h:form>

    <ui:include src="securityDialog.xhtml" />
  </ui:define>
</ui:composition>